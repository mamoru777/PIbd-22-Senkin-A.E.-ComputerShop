// <auto-generated />
using System;
using ComputerShopDataBaseImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComputerShopDataBaseImplement.Migrations
{
    [DbContext(typeof(ComputerShopDataBase))]
    [Migration("20220526164028_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Complect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComplectId")
                        .HasColumnType("int");

                    b.Property<string>("ComplectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostavshikId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SborkaId")
                        .HasColumnType("int");

                    b.Property<int>("ZakupkaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplectId");

                    b.HasIndex("PostavshikId");

                    b.HasIndex("SborkaId");

                    b.ToTable("Complects");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.PolTechnic", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatePos")
                        .HasColumnType("datetime2");

                    b.Property<string>("PolTechnicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostavkaId")
                        .HasColumnType("int");

                    b.Property<int?>("PostavlaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostavlaId");

                    b.ToTable("PolTechnics");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Postavka", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PostavkaCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostavkaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Postavkas");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.PostavkaZaiavka", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PostavkaId")
                        .HasColumnType("int");

                    b.Property<int>("ZaiavkaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostavkaId");

                    b.HasIndex("ZaiavkaId");

                    b.ToTable("PostavkaZaiavkas");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Postavshik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Postavshiks");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Sborka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PostavshikId")
                        .HasColumnType("int");

                    b.Property<string>("SborkaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PostavshikId");

                    b.ToTable("Sborkas");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.SborkaZaiavka", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SborkaId")
                        .HasColumnType("int");

                    b.Property<int>("ZaiavkaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SborkaId");

                    b.HasIndex("ZaiavkaId");

                    b.ToTable("SborkaZaiavkas");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Zaiavka", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ZaiavkaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zaiavkas");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Zakupka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComplectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBuy")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ZakupkaId")
                        .HasColumnType("int");

                    b.Property<string>("ZakupkaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ZakupkaId");

                    b.ToTable("Zakupkas");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Complect", b =>
                {
                    b.HasOne("ComputerShopDataBaseImplement.Models.Zakupka", "zakupka")
                        .WithMany()
                        .HasForeignKey("ComplectId");

                    b.HasOne("ComputerShopDataBaseImplement.Models.Postavshik", "postavshik")
                        .WithMany("Complects")
                        .HasForeignKey("PostavshikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputerShopDataBaseImplement.Models.Sborka", "sborka")
                        .WithMany("Complects")
                        .HasForeignKey("SborkaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("postavshik");

                    b.Navigation("sborka");

                    b.Navigation("zakupka");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.PolTechnic", b =>
                {
                    b.HasOne("ComputerShopDataBaseImplement.Models.Postavka", "postavka")
                        .WithMany("poltechnic")
                        .HasForeignKey("PostavlaId");

                    b.Navigation("postavka");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.PostavkaZaiavka", b =>
                {
                    b.HasOne("ComputerShopDataBaseImplement.Models.Postavka", "postavka")
                        .WithMany("PostavkaZaiavkas")
                        .HasForeignKey("PostavkaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ComputerShopDataBaseImplement.Models.Zaiavka", "zaiavka")
                        .WithMany("PostavkaZaiavkas")
                        .HasForeignKey("ZaiavkaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("postavka");

                    b.Navigation("zaiavka");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Sborka", b =>
                {
                    b.HasOne("ComputerShopDataBaseImplement.Models.Postavshik", "postavshik")
                        .WithMany("Sborkas")
                        .HasForeignKey("PostavshikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("postavshik");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.SborkaZaiavka", b =>
                {
                    b.HasOne("ComputerShopDataBaseImplement.Models.Sborka", "sborka")
                        .WithMany("SborkaZaiavkas")
                        .HasForeignKey("SborkaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ComputerShopDataBaseImplement.Models.Zaiavka", "zaiavka")
                        .WithMany("SborkaZaiavka")
                        .HasForeignKey("ZaiavkaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("sborka");

                    b.Navigation("zaiavka");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Zakupka", b =>
                {
                    b.HasOne("ComputerShopDataBaseImplement.Models.Complect", "complect")
                        .WithMany()
                        .HasForeignKey("ZakupkaId");

                    b.Navigation("complect");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Postavka", b =>
                {
                    b.Navigation("poltechnic");

                    b.Navigation("PostavkaZaiavkas");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Postavshik", b =>
                {
                    b.Navigation("Complects");

                    b.Navigation("Sborkas");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Sborka", b =>
                {
                    b.Navigation("Complects");

                    b.Navigation("SborkaZaiavkas");
                });

            modelBuilder.Entity("ComputerShopDataBaseImplement.Models.Zaiavka", b =>
                {
                    b.Navigation("PostavkaZaiavkas");

                    b.Navigation("SborkaZaiavka");
                });
#pragma warning restore 612, 618
        }
    }
}
